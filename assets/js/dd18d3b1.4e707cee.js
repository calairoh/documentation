"use strict";(self.webpackChunkmia_platform_doc=self.webpackChunkmia_platform_doc||[]).push([[398],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),f=o,h=u["".concat(l,".").concat(f)]||u[f]||m[f]||a;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9733:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>u});r(7294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const i={id:"tests",title:"Tests",sidebar_label:"Tests"},l=void 0,p={unversionedId:"reports/tests",id:"reports/tests",title:"Tests",description:"The Test Report is a document that summarizes the result of all the tests carried out to verify that the actual implementation fulfills the requirements. Moreover, Test Report traces the test executors as well as the results of all the test executions. For further information about testing procedures and entities in Mia-Care P4SaMD please refer to the related section.",source:"@site/docs/reports/tests.md",sourceDirName:"reports",slug:"/reports/tests",permalink:"/documentation/docs/reports/tests",draft:!1,editUrl:"https://github.com/mia-platform/documentation/edit/main/docs/reports/tests.md",tags:[],version:"current",frontMatter:{id:"tests",title:"Tests",sidebar_label:"Tests"},sidebar:"P4SaMD",previous:{title:"Changes",permalink:"/documentation/docs/reports/changes"},next:{title:"Risks",permalink:"/documentation/docs/reports/risks"}},c={},u=[{value:"Report structure",id:"report-structure",level:2},{value:"Attachments",id:"attachments",level:2}],m={toc:u},f="wrapper";function h(e){var{components:t}=e,r=s(e,["components"]);return(0,n.kt)(f,a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},m,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ",(0,n.kt)("em",{parentName:"p"},"Test Report")," is a document that summarizes the result of all the tests carried out to verify that the actual implementation fulfills the requirements. Moreover, ",(0,n.kt)("em",{parentName:"p"},"Test Report")," traces the test executors as well as the results of all the test executions. For further information about testing procedures and entities in Mia-Care P4SaMD please refer to the related section."),(0,n.kt)("p",null,"The ",(0,n.kt)("em",{parentName:"p"},"Test Report")," generated by Mia-Care P4SaMD is composed by data that comes are collected both from the issue tracking tool and the Mia-platform project configuration."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The format of the ",(0,n.kt)("em",{parentName:"p"},"Test Report")," generated by Mia-Care P4SaMD has been designed to address what is required by the regulatory framework. However, the document can be customized to address the Quality Management System (QMS) of a specific company. For further information about document customization, please refer to Mia-Care Support Team. ")),(0,n.kt)("h2",{id:"report-structure"},"Report structure"),(0,n.kt)("p",null,"The document contains the following information:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Version name"),": the version name uniquely identifies the version of the software that has been released and to which the ",(0,n.kt)("em",{parentName:"li"},"Test Report")," refer to. It must follow the ",(0,n.kt)("a",{parentName:"li",href:"https://semver.org/"},"Semantic Versioning standard"),";"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Release date"),": the release date represents the date in which the related software has been released;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Test Execution"),": the ",(0,n.kt)("em",{parentName:"li"},"Test Report")," contains the list of the test executions of the related software version. Each test execution is detailed with the following information:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Test code"),": the unique identifier of the test;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Test title"),": the title of the test;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Test status"),": the status of the test referred to the execution date;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Execution date"),": the execution date of the date;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Executor"),": the person who executed the test referred to the execution date;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Test type"),": the type of the test;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Test description"),": the description of the test;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Reference test"),": the test entity linked to the test execution;")))),(0,n.kt)("h2",{id:"attachments"},"Attachments"),(0,n.kt)("p",null,"Together with the ",(0,n.kt)("em",{parentName:"p"},"Test Report")," document, Mia-Care P4SaMD allows you to generate reports for the different types of tests that the platform allows you to create. In particular we can have:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Unit Test Report"),": it contains the result of unit tests performed on a single microservice. The format of unit test report may change based on the test library used for the specific microservice, which in turn changes based on the language or framework used;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Integration Test Report"),": it contains the result of integration tests performed on a set of components. The format of integration test report is the one proposed by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/postmanlabs/newman"},"Newman"),", since it is the tool used to run integration tests;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"End-to-End (E2E) Test Report"),": it contains the result of E2E tests performed at system level. The format of the E2E tests is the proposed by ",(0,n.kt)("a",{parentName:"li",href:"https://playwright.dev/"},"Playwright"),", since it is the tool used to run E2E tests.")))}h.isMDXComponent=!0}}]);