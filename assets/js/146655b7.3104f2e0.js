"use strict";(self.webpackChunkmia_platform_doc=self.webpackChunkmia_platform_doc||[]).push([[276],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8103:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>d});r(7294);var n=r(3905);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}const s={id:"repositories",title:"Repositories",sidebar_label:"Repositories"},p="Version Control Provider",c={unversionedId:"gitlab/repositories",id:"gitlab/repositories",title:"Repositories",description:"The version control provider is used to store all the source code related to a specific project, as well as the documentation automatically generated by Mia-Care P4SaMD. The supported version control provider are:",source:"@site/docs/gitlab/repositories.md",sourceDirName:"gitlab",slug:"/gitlab/repositories",permalink:"/documentation/docs/gitlab/repositories",draft:!1,editUrl:"https://github.com/mia-platform/documentation/edit/main/docs/gitlab/repositories.md",tags:[],version:"current",frontMatter:{id:"repositories",title:"Repositories",sidebar_label:"Repositories"},sidebar:"P4SaMD",previous:{title:"Jira Project",permalink:"/documentation/docs/project-management/jira"},next:{title:"Release Notes",permalink:"/documentation/docs/reports/release-notes"}},l={},d=[{value:"Folder Structure",id:"folder-structure",level:2},{value:"Groups and repositories",id:"groups-and-repositories",level:2}],u={toc:d},m="wrapper";function f(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)(m,a(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){o(e,t,r[t])}))}return e}({},u,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"version-control-provider"},"Version Control Provider"),(0,n.kt)("p",null,"The version control provider is used to store all the source code related to a specific project, as well as the documentation automatically generated by Mia-Care P4SaMD. The supported version control provider are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Gitlab")),(0,n.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,n.kt)("p",null,"Every project is organized with the following structure:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 Services\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 MobileApp\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 Web Apps\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 Tests\n\u2502   \u251c\u2500\u2500 E2E tests\n\u2502   \u2514\u2500\u2500 Integration tests\n\u251c\u2500\u2500 Documentation\n\u251c\u2500\u2500 Archived Documentation\n\u2514\u2500\u2500 Configurations\n")),(0,n.kt)("h2",{id:"groups-and-repositories"},"Groups and repositories"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Version Control Entity"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Services")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Group"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This group contains the repositories for each service created in the project.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"MobileApp")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Group"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This group contains the repositories for each mobile app created in the project.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Web Apps")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Group"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This group contains the repositories for each web app created in the project.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Tests")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Group"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This group contains the repositories for integration and E2E tests for the project.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"E2E Tests")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Repository"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This repository contains the Playwright end-to-end tests. For further information about this repository, please refer to the e2e-tests section. //TODO link")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Integration Tests")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Repository"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This repository contains the Newman integration tests. For further information about this repository, please refer to the integration-tests section. //TODO link")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Documentations")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Repository"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This repository contains the documentation generated from P4SaMD. For further information about the structure of this repository and the generated documents, please refer to the Report section. //TODO link")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Archived Documentation")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Repository"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This repository contains archived documentation generated from P4SaMD.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Configurations")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Repository"),(0,n.kt)("td",{parentName:"tr",align:"left"},"This repository contains the files generated from the Mia Platform IDP.")))))}f.isMDXComponent=!0}}]);